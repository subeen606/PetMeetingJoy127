<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="Admin">
	<!-- 소모임 목록 -->
	<select id="getPlayboardList" parameterType="com.petmeeting.joy.playboard.model.PlayboardSearchBean" resultType="com.petmeeting.joy.playboard.model.PlayboardDto">
		SELECT SEQ, BOARD_CODE, EMAIL, TITLE, CONTENT, FILENAME, LOCATION, LOCATION_DETAIL, CATEGORY, 
			   PRICE, PEOPLE, PERSONCOUNT, READCOUNT, LIKECOUNT, REPORTCOUNT, PDATE, EDATE, REGDATE, DEL
		FROM (SELECT ROW_NUMBER()OVER(ORDER BY SEQ DESC)AS RNUM, SEQ, BOARD_CODE, EMAIL, TITLE, CONTENT, FILENAME, LOCATION, LOCATION_DETAIL, CATEGORY, 
			   PRICE, PEOPLE, PERSONCOUNT, READCOUNT, LIKECOUNT, REPORTCOUNT, PDATE, EDATE, REGDATE, DEL
			   FROM PM_PLAYBOARD
			   WHERE 1=1 AND CATEGORY LIKE '%'||#{playCategory}||'%'  
			<if test="searchCategory == '선택'">
				)
			</if>					
			<if test="searchCategory == '삭제'">
				AND DEL=1)
			</if>			
			<if test="searchCategory == '마감'">
				AND EDATE <![CDATA[<=]]> SYSDATE)
			</if>								
			WHERE RNUM <![CDATA[>=]]> #{startRow} AND RNUM <![CDATA[<=]]> #{endRow}
	</select>
	<!-- 총 글의 개수(row count) -->
	<select id="getTotalRowCount" parameterType="com.petmeeting.joy.playboard.model.PlayboardSearchBean" resultType="java.lang.Integer">
		SELECT COUNT(*)
		FROM (SELECT ROW_NUMBER()OVER(ORDER BY SEQ DESC) AS RNUM, SEQ, BOARD_CODE, EMAIL, TITLE, CONTENT, FILENAME, LOCATION, LOCATION_DETAIL, CATEGORY, 
			   PRICE, PEOPLE, PERSONCOUNT, READCOUNT, LIKECOUNT, REPORTCOUNT, PDATE, EDATE, REGDATE, DEL
			   FROM PM_PLAYBOARD
			   WHERE 1=1 AND CATEGORY LIKE '%'||#{playCategory}||'%'  
			<if test="searchCategory == '선택'">
				)
			</if>					
			<if test="searchCategory == '삭제'">
				AND DEL=1)
			</if>			
			<if test="searchCategory == '마감'">
				AND EDATE <![CDATA[<=]]> SYSDATE)
			</if>								
	</select>
	
	<!-- 소모임 글 삭제 -->
	<delete id="deletePlayboard" parameterType="java.lang.Integer">
		DELETE 
		FROM PM_PLAYBOARD
		WHERE SEQ=#{seq}
	</delete>
	<!-- 삭제된 모임의 참여자 목록 삭제 -->
	<delete id="deletePlayMem" parameterType="java.lang.Integer">
		DELETE
		FROM PM_PLAYMEM
		WHERE PLAY_SEQ=#{seq}
	</delete>
	<!-- 삭제된 모임의 Q&A 삭제 -->
	<delete id="deletePlayboardQnA" parameterType="java.lang.Integer">
		DELETE
		FROM PM_PLAYBOARDQNA
		WHERE BOARD_SEQ=#{seq}
	</delete>
	
	<!-- 소모임 디테일 -->
	<select id="getPlayboardDetail" parameterType="java.lang.Integer" resultType="com.petmeeting.joy.playboard.model.PlayboardDto">
		SELECT SEQ, BOARD_CODE, EMAIL, NICKNAME, TITLE, CONTENT, FILENAME, LOCATION, LOCATION_DETAIL, CATEGORY, 
				PRICE, PEOPLE, PERSONCOUNT, READCOUNT, LIKECOUNT, REPORTCOUNT, PDATE, EDATE, REGDATE, DEL
		FROM PM_PLAYBOARD, (SELECT NICKNAME FROM PM_MEMBER WHERE EMAIL=(SELECT EMAIL FROM PM_PLAYBOARD WHERE SEQ=#{seq}))
		WHERE SEQ=#{seq}
	</select>

	<!-- 신고 내용 불러오기 -->
	<select id="getBoardReportReason" parameterType="com.petmeeting.joy.admin.model.BoardReportDto" resultType="com.petmeeting.joy.admin.model.BoardReportDto">
		SELECT R.SEQ, R.BOARD_CODE, R.BOARD_SEQ, R.EMAIL, M.NICKNAME, R.REASON
		FROM PM_BOARD_REPORT R JOIN PM_MEMBER M ON R.EMAIL = M.EMAIL
		WHERE R.BOARD_CODE=#{board_code} AND R.BOARD_SEQ=#{board_seq}
		ORDER BY R.SEQ ASC
	</select>

	<!-- 신고 삭제 -->
	<delete id="deleteBoardReport" parameterType="com.petmeeting.joy.admin.model.BoardReportDto">
		DELETE
		FROM PM_BOARD_REPORT
		WHERE SEQ=#{seq} AND BOARD_CODE=#{board_code} AND BOARD_SEQ=#{board_seq} 
	</delete>
	
	<!-- 신고 카운트 감소 -->
	<update id="minusReportCount" parameterType="com.petmeeting.joy.admin.model.BoardReportDto">
		UPDATE 
		<if test="board_code == 'PLAY'">
			PM_PLAYBOARD
		</if>
		<if test="board_code != 'PLAY'">
			PM_FREEBOARD
		</if>
		SET REPORTCOUNT = REPORTCOUNT-1
		WHERE SEQ=#{board_seq}
	</update>
	
	

	<!-- fundingList 추가 -->
	<insert id="addFunding" parameterType="com.petmeeting.joy.funding.model.FundingDto">
		INSERT INTO PM_FUNDINGBOARD(SEQ, BOARD_CODE, EMAIL, TITLE, INTRO, CONTENT, THUMBNAIL, MAX_PRICE, CURRENT_PRICE, PERSONCOUNT, LIKECOUNT, READCOUNT,SDATE, EDATE, REGDATE)
		VALUES(PM_FUNDINGBOARD_SEQ.NEXTVAL, 'FUND', #{email}, #{title}, #{intro}, #{content}, #{thumbnail}, #{max_price}, 0, 0, 0, 0, #{sdate}, #{edate}, SYSDATE)
	</insert>

	

	<!-- funding 리스트목록 -->
	<select id="getFundingList" parameterType="com.petmeeting.joy.funding.model.fundingBean" resultType="com.petmeeting.joy.funding.model.FundingDto">
		SELECT * FROM(SELECT ROW_NUMBER()OVER(ORDER BY REGDATE DESC)AS RNUM,
				SEQ, BOARD_CODE, EMAIL, TITLE, INTRO, CONTENT, THUMBNAIL, MAX_PRICE, CURRENT_PRICE,
				PERSONCOUNT, LIKECOUNT, READCOUNT, SDATE, EDATE, REGDATE
				FROM PM_FUNDINGBOARD
		WHERE 1=1
		<if test="f_categorys == '진행'">
		AND EDATE <![CDATA[>=]]> SYSDATE
		AND	CURRENT_PRICE <![CDATA[<]]> MAX_PRICE
		</if>
		<if test="f_categorys == '마감'">
		AND EDATE <![CDATA[<]]> SYSDATE
		OR CURRENT_PRICE <![CDATA[=]]> MAX_PRICE		
		</if>
		)
		WHERE RNUM BETWEEN ${start} AND ${end}			
	</select>
	
	<!-- funding 리스트 수 가지고오기 -->
	<select id="getFundingCount" parameterType="com.petmeeting.joy.funding.model.fundingBean" resultType="java.lang.Integer">
		SELECT NVL(COUNT(*),0) AS CNT
		FROM PM_FUNDINGBOARD
		
		WHERE 1=1
		<if test="f_categorys == '진행'">
		AND EDATE <![CDATA[>=]]> SYSDATE
		AND	CURRENT_PRICE <![CDATA[<]]> MAX_PRICE
		</if>
		<if test="f_categorys == '마감'">
		AND EDATE <![CDATA[<]]> SYSDATE
		OR CURRENT_PRICE <![CDATA[=]]> MAX_PRICE		
		</if>
	</select>
	
	<!-- fundingDetail 보기  -->
	<select id="adminfundingDetail" parameterType="java.lang.Integer" resultType="com.petmeeting.joy.funding.model.FundingDto">
		SELECT SEQ, BOARD_CODE, EMAIL, TITLE, INTRO, CONTENT, THUMBNAIL, MAX_PRICE, CURRENT_PRICE, PERSONCOUNT, LIKECOUNT, READCOUNT, SDATE, EDATE, REGDATE
		FROM PM_FUNDINGBOARD
		WHERE SEQ=#{seq}
	</select>
	
	<!-- funding 글 삭제 -->
	<delete id="fundingDelete" parameterType="java.lang.Integer">
		DELETE FROM PM_FUNDINGBOARD
		WHERE SEQ=#{seq}
	</delete>
	
	<!-- funding 내역서 삭제 -->
	<delete id="fundingStaDel" parameterType="java.lang.Integer">
		DELETE FROM PM_FUNDING_STA
		WHERE SEQ=#{seq}
	</delete>
	

	<!-- funding 수정 -->
	<update id="fundingUpdate" parameterType="com.petmeeting.joy.funding.model.FundingDto">
		UPDATE PM_FUNDINGBOARD
		SET TITLE=#{title},INTRO=#{intro},CONTENT=#{content},MAX_PRICE=#{max_price},SDATE=#{sdate},EDATE=#{edate}
		<if test="thumbnail != null and thumbnail != ''">
		,THUMBNAIL=#{thumbnail}
		</if>
		WHERE SEQ=#{seq}
	</update>

	<!-- 내역서 저장 -->
	<insert id="addfundingSta" parameterType="com.petmeeting.joy.funding.model.FundingStaDto">
		INSERT INTO PM_FUNDING_STA(SEQ,EMAIL,CONTENT)
		VALUES(#{seq},#{email},#{content})
	</insert>

	<!-- 내역서 썼는지 check -->
	<select id="fundingStacheck" parameterType="java.lang.Integer" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM PM_FUNDING_STA
		WHERE SEQ=#{seq}
	</select> 
	
	<!--후원한 사람 list -->
	<select id="whofundingMem" parameterType="java.lang.Integer" resultType="com.petmeeting.joy.admin.model.FundMemberDto">
		SELECT F.MYPROFILE_IMG, G.NICKNAME, G.EMAIL, M.DONATION, M.D_DATE, G.NAME
		FROM PM_MYPROFILE F,PM_FUNDINGMEM M , PM_MEMBER G
		WHERE F.EMAIL = M.EMAIL AND M.EMAIL = G.EMAIL AND M.FUNDING_SEQ = #{funding_seq}
	</select>


</mapper>